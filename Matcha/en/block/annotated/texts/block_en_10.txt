Article 4 (https://www.soldev.app/course/interact-with-wallets) 

Summary 

Wallets store your secret key and handle secure transaction signing 

Hardware wallets store your secret key on a separate device 

Software wallets use your computer for secure storage 

Software wallets are often browser extensions that facilitate connecting to websites 

Solana’s Wallet-Adapter library simplifies the support of wallet browser extensions, allowing you to build websites that can request a user’s wallet address and propose transactions for them to sign 

Lesson 

Wallets 

In the previous two lessons we discussed keypairs. Keypairs are used to locate accounts and sign transactions. While the public key of a keypair is perfectly safe to share, the secret key should always be kept in a secure location. If a user’s secret key is exposed, then a malicious actor could drain their account of all assets and execute transactions with the authority of that user. 

A “wallet” refers to anything that stores a secret key in order to keep it secure. These secure storage options can generally be described as either “hardware” or “software” wallets. Hardware wallets are storage devices that are separate from your computer. Software wallets are application you can install on your existing device(s). 

Software wallets often come in the form of a browser extension. This makes it possible for websites to interact easily with the wallet. Such interactions are usually limited to: 

Seeing the wallet’s public key (address) 

Submitting transactions for a user's approval 

Sending an approved transaction to the network 

Once a transaction is submitted, the end user can “confirm” the transaction and send it to the network with their “signature.” 

Signing transactions requires using your secret key. By letting a site submit a transaction to your wallet and having the wallet handle the signing, you ensure that you never expose your secret key to the website. Instead, you only share the secret key with the wallet application. 

Unless you’re creating a wallet application yourself, your code should never need to ask a user for their secret key. Instead, you can ask users to connect to your site using a reputable wallet. 

Phantom Wallet 

One of the most widely used software wallets in the Solana ecosystem is Phantom. Phantom supports a few of the most popular browsers and has a mobile app for connecting on the go. You’ll likely want your decentralized applications to support multiple wallets, but this course will focus on Phantom. 

Solana’s Wallet-Adapter 

Solana’s Wallet-Adapter is a suite of libraries you can use to simplify the process of supporting wallet browser extensions. 

Solana’s Wallet-Adapter comprises multiple modular packages. The core functionality is found in @solana/wallet-adapter-base and @solana/wallet-adapter-react. 

There are also packages that provide components for common UI frameworks. In this lesson and throughout this course, we’ll be using components from @solana/wallet-adapter-react-ui. 

Finally, there are packages that are adapters for specific wallets, including Phantom. You can use @solana/wallet-adapter-wallets to include all of the supported wallets, or you can choose a specific wallet package like @solana/wallet-adapter-phantom. 

Install Wallet-Adapter Libraries 

When adding wallet support to an existing react app, you start by installing the appropriate packages. You’ll need  

All wallets that support wallet standard are supported out of the box, and nearly all current Solana wallets support wallet standard. However if you wish to add support for any wallets that don't support the standard, add a package for them. 
